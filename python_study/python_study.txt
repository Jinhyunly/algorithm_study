------------------------------------------------------
- rstrip() 라이브러리

import sys

sys.stdin.readline().rstrip()
개행문자 삭제

------------------------------------------------------
stack = []

if not stack  #스텍에 값이 존재하지 않는다
  pirnt("empty")

------------------------------------------------------


import sys

list = []
for i in range(9):
   list.append(int(sys.stdin.readline()))

#위에 코드와 동일하다 (for문을 list comprehension 으로 작성한 코드)
list = [int(sys.stdin.readline()) for _ in range(9)]


-----------------------------------------------------


print("{:.3f}%".format(12.1235)) # 12.123%

print("{:.3f}".format(12.1235))  # 12.123



---------------------------------------------------

#소수구하기

import sys

m, n = map(int, sys.stdin.readline().split())

def is_prime_num(n):
  for i in range(2, n):
    if n%i == 0:
      return False
  return True

for i in range(m, n+1):
  if is_prime_num(i):
    print(i)


---------------------------------------------------

ord(문자): 아스키 코드를 반환해준다
chr(숫자):  숫자에 맞는 아스키 코드를 반환한다.

print(chr(65)) #A
print(ord("A")) #65


---------------------------------------------------

# find 함수

print("abc".find("b"))  #문자열에 해당 문자가 있을 경우 문자열의 인덱스를 반환 값: 1
print("abc".find("f"))  #문자열에 해당 문자가 없을 경우 -1을 반환

-------------------------------------------------
# [::-1] 역순

tmp = "123"
print(tmp[::-1])
print(int(tmp[::-1]))

-------------------------------------------------
#문자열 인덱스 부터 출력

str1 = "abcdefg"
print(str1[1:-2]) # bcdefg
print(str1[1:-2]) # bcde
print(str1[::-1]) # 역순
-------------------------------------------------

#리스트에서 리스트 빼기 (완주하지못한 마라톤 선수(프로그래머스 참고))

import collections

participant = ["a", "b", "c", "a"]
completion = ["a", "b", "b"]

answer = collections.Counter(participant) - collections.Counter(completion)
print(list(answer.keys()))

print(list(answer.keys())[0])
print(list(answer.keys())[1])

# 결과값 
# ['a', 'c']
# a
# b
-------------------------------------------------

다시풀어보자 

문자열 문제 : 백준 1316


-------------------------------------------------